"""Namespace(name='units', func=<function generate at 0x000001BF7503EDD0>)

Revision ID: bb4d359ec64c
Revises: 1648259439ab
Create Date: 2024-02-11 18:45:15.535664

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bb4d359ec64c'
down_revision = '1648259439ab'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inner_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scalar', sa.String(length=100), nullable=True),
    sa.Column('stat_value_decimal', sa.String(length=100), nullable=True),
    sa.Column('ui_display_override_value', sa.String(length=100), nullable=True),
    sa.Column('unit_stat_id', sa.Integer(), nullable=True),
    sa.Column('unscaled_decimal_value', sa.String(length=100), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('level_costs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bonus_quantity', sa.Integer(), nullable=True),
    sa.Column('currency', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('remove_costs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bonus_quantity', sa.Integer(), nullable=True),
    sa.Column('currency', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sell_value',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bonus_quantity', sa.Integer(), nullable=True),
    sa.Column('currency', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('primary_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('roll', sa.JSON(), nullable=True),
    sa.Column('stat_id', sa.Integer(), nullable=True),
    sa.Column('stat_roller_bounds_max', sa.String(length=100), nullable=True),
    sa.Column('stat_roller_bounds_min', sa.String(length=100), nullable=True),
    sa.Column('stat_rolls', sa.Integer(), nullable=True),
    sa.Column('unscaled_roll_value', sa.JSON(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['stat_id'], ['inner_stats.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('units',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.String(length=100), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('definition_id', sa.String(length=100), nullable=True),
    sa.Column('current_stars', sa.String(length=100), nullable=True),
    sa.Column('current_level', sa.Integer(), nullable=True),
    sa.Column('current_rarity', sa.Integer(), nullable=True),
    sa.Column('current_tier', sa.Integer(), nullable=True),
    sa.Column('current_xp', sa.Integer(), nullable=True),
    sa.Column('equipment', sa.JSON(), nullable=True),
    sa.Column('equipped_stat_mod_old', sa.JSON(), nullable=True),
    sa.Column('promotion_recipe_reference', sa.String(length=100), nullable=True),
    sa.Column('purchased_ability_id', sa.JSON(), nullable=True),
    sa.Column('relic', sa.JSON(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('unit_stat', sa.PickleType(), nullable=True),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unit_mods',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('mod_id', sa.String(length=100), nullable=True),
    sa.Column('bonus_quantity', sa.Integer(), nullable=True),
    sa.Column('definition_id', sa.String(length=100), nullable=True),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('level_cost', sa.Integer(), nullable=True),
    sa.Column('locked', sa.Boolean(), nullable=True),
    sa.Column('primary_stat', sa.Integer(), nullable=True),
    sa.Column('remove_cost', sa.Integer(), nullable=True),
    sa.Column('rerolled_count', sa.Integer(), nullable=True),
    sa.Column('sell_value', sa.JSON(), nullable=True),
    sa.Column('tier', sa.Integer(), nullable=True),
    sa.Column('xp', sa.Integer(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['level_cost'], ['level_costs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['primary_stat'], ['primary_stats.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['remove_cost'], ['remove_costs.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unit_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('skill_id', sa.String(length=100), nullable=True),
    sa.Column('unit_id', sa.Integer(), nullable=True),
    sa.Column('tier', sa.Integer(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['unit_id'], ['units.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('secondary_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('roll', sa.JSON(), nullable=True),
    sa.Column('stat_id', sa.Integer(), nullable=True),
    sa.Column('stat_roller_bounds_max', sa.String(length=100), nullable=True),
    sa.Column('stat_roller_bounds_min', sa.String(length=100), nullable=True),
    sa.Column('stat_rolls', sa.Integer(), nullable=True),
    sa.Column('unscaled_roll_value', sa.JSON(), nullable=True),
    sa.Column('unit_mod_id', sa.Integer(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['stat_id'], ['inner_stats.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_mod_id'], ['unit_mods.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('secondary_stats')
    op.drop_table('unit_skills')
    op.drop_table('unit_mods')
    op.drop_table('units')
    op.drop_table('primary_stats')
    op.drop_table('sell_value')
    op.drop_table('remove_costs')
    op.drop_table('level_costs')
    op.drop_table('inner_stats')
    # ### end Alembic commands ###
