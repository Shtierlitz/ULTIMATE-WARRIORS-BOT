# handlers/admin.py

import io
import os
from pprint import pprint

from aiogram import types, Dispatcher

from create_bot import bot
from src.decorators import (
    member_admin_check,
    member_super_admin_check
)
from src.graphics import get_guild_galactic_power
from src.guild import GuildData
from src.player import PlayerData, PlayerService
from src.roster_unit_service import RosterDataService
from src.uint import UnitAggregateService
from src.utils import (
    get_players_list_from_ids,
    check_guild_players,
    is_admin
)


@member_super_admin_check
async def player_cmd_handler(call: types.CallbackQuery):
    """–ú–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞ –≤ –±–æ—Ç"""
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton("üôãüèª‚Äç‚ôÇÔ∏è –î–æ–±–∞–≤–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –≤ –±–æ—Ç", callback_data='add_player'))
    keyboard.add(types.InlineKeyboardButton("üóì –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö", callback_data='players_list'))
    keyboard.add(types.InlineKeyboardButton("üî™ –£–¥–∞–ª–∏—Ç—å –∏–≥—Ä–æ–∫–∞ –∏–∑ –±–æ—Ç–∞", callback_data='delete_player'))
    await call.message.answer("üëÆüèª‚Äç‚ôÇÔ∏è –°–ª—É–∂–±–∞ –ø–æ –∏–≥—Ä–æ–∫–∞–º", reply_markup=keyboard)


async def admin_command_help(update: [types.Message, types.CallbackQuery]):
    if isinstance(update, types.Message):
        user_id = update.from_user.id
        chat_id = update.chat.id
        message_or_call = update
    elif isinstance(update, types.CallbackQuery):
        user_id = update.from_user.id
        chat_id = update.message.chat.id
        message_or_call = update.message
    else:
        # –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
        return

    is_guild_member = message_or_call.conf.get('is_guild_member', False)
    admin = await is_admin(bot, user_id, chat_id)
    if is_guild_member:
        if admin:
            keyboard = types.InlineKeyboardMarkup()
            keyboard.add(types.InlineKeyboardButton("‚úçüèª –ì—Ä—É–ø–ø–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data='group'))
            keyboard.add(types.InlineKeyboardButton("‚úâÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º", callback_data='group_all'))
            keyboard.add(types.InlineKeyboardButton("üôãüèª‚Äç‚ôÇÔ∏è –ó–∞–ø–∏—Å—å/—É–¥–∞–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ –≤ –±–æ—Ç", callback_data='players'))
            keyboard.add(types.InlineKeyboardButton("üìä –ì—Ä–∞—Ñ–∏–∫ –ì–ú –≥–∏–ª—å–¥–∏–∏ –∑–∞ –º–µ—Å—è—Ü", callback_data='guild_month'))
            keyboard.add(types.InlineKeyboardButton("üìä –ì—Ä–∞—Ñ–∏–∫ –ì–ú –≥–∏–ª—å–¥–∏–∏ –∑–∞ –≥–æ–¥", callback_data='guild_year'))
            keyboard.add(types.InlineKeyboardButton("üèó –≠–∫—Å—Ç—Ä–µ–Ω–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ë–î", callback_data='refresh'))
            keyboard.add(types.InlineKeyboardButton("üèó –≠–∫—Å—Ç—Ä–µ–Ω–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —é–Ω–∏—Ç–æ–≤", callback_data='refresh_units'))
            keyboard.add(types.InlineKeyboardButton("üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ –ª–∏ –∏–≥—Ä–æ–∫–∏ –≤ –±–∞–∑–µ", callback_data='check_ids'))
            keyboard.add(types.InlineKeyboardButton("üîç –ù–∞–π—Ç–∏ —é–Ω–∏—Ç", callback_data='find_unit'))
            keyboard.add(
                types.InlineKeyboardButton("‚ò†Ô∏è –ö–æ–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ ‚ò†Ô∏è", callback_data='developer'))
            await message_or_call.answer("üëÆüèª‚Äç‚ôÇÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å üëÆüèª", reply_markup=keyboard)
            # pprint(await RosterDataService().get_russian_localized_unit_name('BOBAFETT')
            # data_1 = await PlayerService().get_comlink_data()
            await PlayerService().update_localization_data()
            # data_2 = await PlayerService().get_comlink_stat_mod_data()
            # pprint(data_2)
            # for i in data_2:
            #     if i['id'] == 451:
            #         pprint(i)
            # print('not found')
        else:
            await message_or_call.reply(f"‚ùå–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.‚ùå\n–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –æ—Ñ–∏—Ü–µ—Ä—É.")
    else:
        await message_or_call.answer(
            "–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å —á–ª–µ–Ω–æ–º –≥–∏–ª—å–¥–∏–∏ –∏–ª–∏ –Ω–µ –ø–æ–¥–∞–ª–∏ —Å–≤–æ–π —Ç–≥ ID –æ—Ñ–∏—Ü–µ—Ä–∞–º. –ö–æ–º–º–∞–Ω–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–∞."
            "\n–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≥–∏–ª—å–¥–∏—é –Ω–∞–ø–∏—à–∏—Ç–µ —Å—Ç–∞—Ä—à–µ–º—É –æ—Ñ–∏—Ü–µ—Ä—É –≤ –ª–∏—á–∫—É:\nhttps://t.me/rollbar")


@member_admin_check
async def command_unit_db_extra(call: types.CallbackQuery):
    """–°—Ç–∞—Ä—Ç—É–µ–º –±–æ—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ë–î"""
    await bot.send_message(call.message.chat.id,
                           "–û–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ —Ñ–æ–Ω–µ.\n–ú–æ–∂–Ω–æ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Ä–∞–±–æ—Ç–µ.")
    await UnitAggregateService().create_or_update_unit()


@member_admin_check
async def command_db_extra(call: types.CallbackQuery):
    """–°—Ç–∞—Ä—Ç—É–µ–º –±–æ—Ç –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –ë–î"""
    await bot.send_message(call.message.chat.id,
                           "–û–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤ —Ñ–æ–Ω–µ.\n–ú–æ–∂–Ω–æ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ —Ä–∞–±–æ—Ç–µ.")
    await GuildData().build_db()
    await PlayerData().update_players_data()


@member_admin_check
async def command_check_ids(call: types.CallbackQuery):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ª–∏ –∏–≥—Ä–æ–∫–∏ –≤ ids.json"""
    await PlayerData().check_members_in_ids(call)
    await PlayerData().check_ids_in_guild(call)


@member_admin_check
async def players_list(call: types.CallbackQuery):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ ids.json –≤ —á–∞—Ç"""
    final_msg_1, final_msg_2 = await get_players_list_from_ids(call.message)
    await bot.send_message(os.environ.get('OFFICER_CHAT_ID'), final_msg_1)
    await bot.send_message(os.environ.get('OFFICER_CHAT_ID'), final_msg_2)


@member_admin_check
async def send_month_guild_grafic(call: types.CallbackQuery):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥—Ä–∞—Ñ–∏–∫ –º–æ—â–∏ –≥–∏–ª—å–¥–∏–∏"""
    image: io.BytesIO = await get_guild_galactic_power(period="month")
    await bot.send_photo(chat_id=call.message.chat.id, photo=image)


@member_admin_check
async def send_year_guild_graphic(call: types.CallbackQuery):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥—Ä–∞—Ñ–∏–∫ —Ä–µ–π–¥–∞ –∏–≥—Ä–æ–∫–∞"""
    image: io.BytesIO = await get_guild_galactic_power(period="year")
    await bot.send_photo(chat_id=call.message.chat.id, photo=image)


@member_admin_check
async def check_ids(call: types.CallbackQuery):
    """–î–µ–ª–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –≤—Å–µ—Ö –≤–Ω–µ—Å–µ–Ω–Ω—ã—Ö –≤ ids.json –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å"""
    await check_guild_players(call.message)


def register_handlers_admin(dp: Dispatcher):
    dp.register_callback_query_handler(command_db_extra, text='refresh')
    dp.register_callback_query_handler(command_unit_db_extra, text='refresh_units')
    dp.register_callback_query_handler(command_check_ids, text='check_ids')
    dp.register_callback_query_handler(players_list, text=['players_list'], state='*')
    dp.register_callback_query_handler(admin_command_help, text='admin')
    dp.register_message_handler(admin_command_help, commands='admin')
    dp.register_callback_query_handler(send_month_guild_grafic, text='guild_month')
    dp.register_callback_query_handler(send_year_guild_graphic, text='guild_year')
    dp.register_callback_query_handler(check_ids, text='check_ids')
    dp.register_callback_query_handler(player_cmd_handler, text='players', state='*')
